{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"C/C++ Input & Output": {
		"prefix": "god",
		"body": [
		  "/******************************************",
		  "* AUTHOR : AMAN SAXENA *",
		  "* Nick : blue-meth *",
		  "* \"There's some good in this world, and it's worth fighting for.\" *",
		  "* INSTITUTION : KIET Group of Institutions *",
		  "******************************************/",
		  "#include <bits/stdc++.h>",
		  "",
		  "const long long MODULO=1000000007;",
		  "#define FOR(i,a,n) for(int i=a;i<n;i++)",
		  "#define FOR1(i,a,n) for(int i=a;i<=n;i++)",
		  "#define FOR2(i,a,n) for(int i=a;i>=n;i--)",
		  "#define pb push_back",
		  "#define mp make_pair",
		  "#define ll long long ",
		  "#define ull unsigned long long",
		  "#define rep(i, begin, end) for (__typeof(end) i = (begin) - ((begin) > (end)); i != (end) - ((begin) > (end)); i += 1 - 2 * ((begin) > (end)))",
		  "#define pi 3.14159265359",
		  "",		  
		  "using namespace std;",
		  "",
		  "ll amanpower(ll a, ll b) {",
		  "    ll r = 1;",
		  "    while (b > 0) ",
		  "    {",
		  "        if (b & 1) r = r * a;",
		  "        a = a * a;",
		  "        b >>= 1;",
		  "    }",
		  "    return r;",
		  "}",
		  "",
		  "ll amanlcm(ll a, ll b)",
		  "{",
		  "	return a*(b/__gcd(a,b));",
		  "}",
		  "",
		  "",
		  "",
		  "void solve()",
		  "{",
		  "    ",
		  "}",
		  "",
		  "void test()",
		  "{",
		  "    int t;",
		  "    cin>>t;",
		  "    while(t--) //for(int j=1;j<=t;j++) cout << \"Case #\" << j << \": \";",
		  "    {",
		  "        solve();",
		  "    }",
		  "}",
		  "",
		  "int main() {",
		  "    ios::sync_with_stdio(false);",
		  "    cin.tie(NULL);",
		  "    cout.tie(NULL);",
		  "    ",
		  "    //#ifndef ONLINE_JUDGE",
		  "    //freopen(\"input.txt\", \"r\", stdin);",
		  "    //freopen(\"output.txt\", \"w\", stdout);",
		  "    //#endif",
		  "    ",
		  "    test();",
		  "    // solve();",
		  "",
		  "    ",
		  "    return 0;",
		  "}"
		],
		"description": "C/C++ Input & Output"
	  },

	  "C++ Output": {
		"prefix": "cout",
		"body": [
		  "cout <<  << '\\n';"
		],
		"description": "C++ Output"
	  },

	  "C++ Array": {
		"prefix": "array",
		"body": [
		  "ll n;",
		  "cin>>n;",
		  "ll i,a[n];",
		  "FOR(i,0,n) cin>>a[i];"
		],
		"description": "C++ Array"
	  },

	  "C++ Combination P & C": {
		"prefix": "combination",
		"body": [
		  "/******************************************",
		  "* AUTHOR : AMAN SAXENA *",
		  "* Nick : blue-meth *",
		  "* \"There's some good in this world, and it's worth fighting for.\" *",
		  "* INSTITUTION : KIET Group of Institutions *",
		  "******************************************/",
		  "#include <bits/stdc++.h>",
		  "",
		  "using namespace std;",
		  "#define pb push_back",
		  "#define ll long long",
		  "const int MAXN=1000005;",
		  "#define mod 999983 //1000000007",
		  "",
		  "ll int fact[MAXN], ifact[MAXN];",
		  "ll int power(ll int x,ll int y,ll int m)",
		  "{",
		  "    if (y == 0)",
		  "        return 1;",
		  "    ll int p = power(x, y/2, m) % m;",
		  "    p = (p * p) % m;",
		  " ",
		  "    return (y%2 == 0)? p : (x * p) % m;",
		  "}",
		  "",
		  "ll int nCr(ll int n, ll int k)",
		  "{",
		  "    if (k > n)",
		  "        return 0;",
		  "    ",
		  "    if (n < mod)",
		  "    {",
		  "        ll int res = fact[n];",
		  "        res = (res * ifact[k]) % mod;",
		  "        res = (res * ifact[n - k]) % mod;",
		  "        return res;",
		  "    }",
		  "    ",
		  "    vector<ll int> N, K;",
		  "    while(n)",
		  "    {",
		  "        N.push_back(n % mod);",
		  "        n /= mod;",
		  "    }",
		  "    ",
		  "    while(k)",
		  "    {",
		  "        K.push_back(k % mod);",
		  "        k /= mod;       ",
		  "    }",
		  "    ",
		  "    ll int res = 1;",
		  "    for(ll int i = 0; i < K.size(); i++)",
		  "        res = (res * nCr(N[i], K[i])) % mod;",
		  "    ",
		  "    return res;",
		  "}",
		  " ",
		  "int main() {",
		  "    ios::sync_with_stdio(false);",
		  "    cin.tie(NULL);",
		  "    cout.tie(NULL);",
		  "",
		  "    #ifndef ONLINE_JUDGE",
		  "    freopen(\"input.txt\", \"r\", stdin);",
		  "    freopen(\"output.txt\", \"w\", stdout);",
		  "    #endif",
		  "    ",
		  "    fact[0] = 1;",
		  "    for(ll i = 1; i < MAXN; i++)",
		  "        fact[i] = (i * fact[i - 1]) % mod;",
		  "    for(ll i = 0; i < MAXN; i++)",
		  "        ifact[i] = power(fact[i], mod - 2, mod);",
		  "	",
		  "	int t;",
		  "	cin>>t;",
		  "	while(t--) //for(int j=1;j<=t;j++) cout << \"Case #\" << j << \": \";",
		  "	{",
		  "		ll x,y;",
		  "		cin>>x>>y;",
		  "		ll ans= nCr(x,y)%mod;",
		  "		cout << ans << '\\n';",
		  "	}",
		  "	return 0;",
		  "}"
		],
		"description": "C++ Combination P & C"
	  },

	  "C++ Factorial": {
		"prefix": "factorial",
		"body": [
		  "/******************************************",
		  "* AUTHOR : AMAN SAXENA *",
		  "* Nick : blue-meth *",
		  "* \"There's some good in this world, and it's worth fighting for.\" *",
		  "* INSTITUTION : KIET Group of Institutions *",
		  "******************************************/",
		  "#include <bits/stdc++.h>",
		  "",
		  "const long long MODULO=1000000007;",
		  "#define FOR(i,a,n) for(int i=a;i<n;i++)",
		  "#define FOR1(i,a,n) for(int i=a;i<=n;i++)",
		  "#define FOR2(i,a,n) for(int i=a;i>=n;i--)",
		  "#define pb push_back",
		  "#define mp make_pair",
		  "#define ll long long ",
		  "#define ull unsigned long long",
		  "#define rep(i, begin, end) for (__typeof(end) i = (begin) - ((begin) > (end)); i != (end) - ((begin) > (end)); i += 1 - 2 * ((begin) > (end)))",
		  "#define MAX 5000",
		  "",
		  "using namespace std;",
		  "",
		  "template <typename TYPE> void in(TYPE &x){cin>>x;}",
		  "",
		  "int a[MAX];",
		  "",
		  "int multiply(ll x, int a[], ll s)",
		  "{",
		  "	ll carry=0;",
		  "	FOR(i,0,s)",
		  "	{",
		  "		ll product=a[i]*x + carry;",
		  "		a[i]=product%10;",
		  "		carry=product/10;",
		  "	}",
		  "	while(carry)",
		  "	{",
		  "		a[s]=carry%10;",
		  "		carry/=10;",
		  "		s++;",
		  "	}",
		  "	return s;",
		  "}",
		  "",
		  "void solve(ll n)",
		  "{",
		  "	a[0]=1;",
		  "	ll s=1;",
		  "	FOR(i,2,n+1)",
		  "	{",
		  "		s=multiply(i,a,s);",
		  "	}",
		  "	FOR2(i,s-1,0)",
		  "	{",
		  "		cout << a[i] ;",
		  "	}",
		  "	cout << '\\n';",
		  "}",
		  "",
		  "int main() {",
		  "    ios::sync_with_stdio(false);",
		  "    cin.tie(NULL);",
		  "    cout.tie(NULL);",
		  "",
		  "    #ifndef ONLINE_JUDGE",
		  "    freopen(\"input.txt\", \"r\", stdin);",
		  "    freopen(\"output.txt\", \"w\", stdout);",
		  "    #endif",
		  "	",
		  "	ll n;",
		  "	cin>>n;",
		  "	solve(n);",
		  "	return 0;",
		  "}"
		],
		"description": "C++ Factorial"
	  },

	  "C++ PBDS: Policy based data structures.": {
		"prefix": "pbds",
		"body": [
		  "/******************************************",
		  "* AUTHOR : AMAN SAXENA *",
		  "* Nick : blue-meth *",
		  "* \"There's some good in this world, and it's worth fighting for.\" *",
		  "* INSTITUTION : KIET Group of Institutions *",
		  "******************************************/",
		  "#include <bits/stdc++.h>",
		  "#include <ext/pb_ds/assoc_container.hpp> ",
		  "#include <ext/pb_ds/tree_policy.hpp> ",
		  "",
		  "const long long MODULO=1000000007;",
		  "#define FOR(i,a,n) for(int i=a;i<n;i++)",
		  "#define FOR1(i,a,n) for(int i=a;i<=n;i++)",
		  "#define FOR2(i,a,n) for(int i=a;i>=n;i--)",
		  "#define pb push_back",
		  "#define mp make_pair",
		  "#define ll long long ",
		  "#define ull unsigned long long",
		  "#define rep(i, begin, end) for (__typeof(end) i = (begin) - ((begin) > (end)); i != (end) - ((begin) > (end)); i += 1 - 2 * ((begin) > (end)))",
		  "",
		  "using namespace std;",
		  "using namespace __gnu_pbds;",
		  "",
		  "/*typedef tree< int, null_type,less<pair<int, int>>,rb_tree_tag, ",
		  "tree_order_statistics_node_update> ordered_set;*/   // for integer type entry in ordered set",
		  "",
		  "typedef tree< pair<int, int>, null_type,less<pair<int, int>>,rb_tree_tag,",
		  "tree_order_statistics_node_update> ordered_set;     // for pair type entry in ordered set",
		  "",
		  "ordered_set s;",
		  "",
		  "/*PBDS: Policy based data structures.",
		  "",
		  "Features:",
		  "-> find_by_order(k): It returns to an iterator to the kth element (counting from zero) in the set in O(logn) time.",
		  "-> order_of_key(k) : It returns to the number of items that are strictly smaller than our item k in O(logn) time.",
		  "-> s.order_of_key(r+1) â€“ s.order_of_key(l) : count of elements between l and r can be found.*/",
		  "",
		  "template <typename TYPE> void in(TYPE &x){cin>>x;}",
		  "",
		  "const int N=2002;",
		  "int b[N],a[N];",
		  "",
		  "void solve()",
		  "{",
		  "    ",
		  "}",
		  "",
		  "void test()",
		  "{",
		  "    int t;",
		  "    cin>>t;",
		  "    while(t--) //for(int j=1;j<=t;j++) cout << \"Case #\" << j << \": \";",
		  "    {",
		  "        solve();",
		  "    }",
		  "}",
		  "",
		  "int main() {",
		  "    ios::sync_with_stdio(false);",
		  "    cin.tie(NULL);",
		  "    cout.tie(NULL);",
		  "",
		  "    #ifndef ONLINE_JUDGE",
		  "    freopen(\"input.txt\", \"r\", stdin);",
		  "    freopen(\"output.txt\", \"w\", stdout);",
		  "    #endif",
		  "    ",
		  "    test();",
		  "    // solve();",
		  "    ",
		  "    return 0;",
		  "}"
		],
		"description": "C++ PBDS: Policy based data structures."
	  }



}
